{"message":"cannot  get genre","stack":"Error: cannot  get genre\n    at getAllGenres (D:\\Web_apps\\node-practice\\express-demo\\controllers\\genresController.js:15:11)\n    at newFn (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:341:12)\n    at next (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:275:10)","level":"error","timestamp":"2022-05-05T21:34:43.464Z"}
{"message":"next is not defined","stack":"ReferenceError: next is not defined\n    at getAllGenres (D:\\Web_apps\\node-practice\\express-demo\\controllers\\genresController.js:22:5)\n    at newFn (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:341:12)\n    at next (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:275:10)","level":"error","timestamp":"2022-05-05T21:37:31.215Z"}
{"message":"cannot  get genre","stack":"Error: cannot  get genre\n    at getAllGenres (D:\\Web_apps\\node-practice\\express-demo\\controllers\\genresController.js:15:11)\n    at newFn (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:341:12)\n    at next (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:275:10)","level":"error","timestamp":"2022-05-05T21:38:03.214Z"}
{"message":"something failed on startup","stack":"Error: something failed on startup\n    at Object.<anonymous> (D:\\Web_apps\\node-practice\\express-demo\\index.js:20:7)\n    at Module._compile (internal/modules/cjs/loader.js:1085:14)\n    at Object.Module._extensions..js (internal/modules/cjs/loader.js:1114:10)\n    at Module.load (internal/modules/cjs/loader.js:950:32)\n    at Function.Module._load (internal/modules/cjs/loader.js:790:12)\n    at Function.executeUserEntryPoint [as runMain] (internal/modules/run_main.js:75:12)\n    at internal/main/run_main_module.js:17:47","level":"error","timestamp":"2022-05-05T21:50:17.187Z"}
{"level":"info","message":"Connected to MongoDB..","timestamp":"2022-05-05T22:17:38.211Z"}
{"level":"info","message":"Connected to MongoDB..","timestamp":"2022-05-05T22:18:07.579Z"}
{"level":"warn","message":"Could not connect to MongoDB... connect ECONNREFUSED 127.0.0.1:27017","timestamp":"2022-05-05T22:19:22.887Z"}
{"level":"info","message":"Connected to MongoDB..","timestamp":"2022-05-05T22:19:44.278Z"}
{"level":"info","message":"Connected to MongoDB..","timestamp":"2022-05-05T22:22:10.479Z"}
{"level":"info","message":"Connected to MongoDB..","timestamp":"2022-05-05T22:22:57.538Z"}
{"level":"info","message":"Connected to MongoDB..","timestamp":"2022-05-05T22:25:40.606Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-05-05T22:31:04.902Z"}
{"level":"info","message":"Connected to MongoDB..","timestamp":"2022-05-05T22:31:04.945Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-05-05T22:32:39.434Z"}
{"level":"info","message":"Connected to MongoDB..","timestamp":"2022-05-05T22:32:39.482Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-05-05T22:32:56.932Z"}
{"level":"info","message":"Connected to MongoDB..","timestamp":"2022-05-05T22:32:56.995Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T17:06:51.640Z"}
{"level":"info","message":"Connected to MongoDB..","timestamp":"2022-06-22T17:06:53.098Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T17:18:25.849Z"}
{"level":"info","message":"Connected to MongoDB..","timestamp":"2022-06-22T17:18:25.942Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T17:18:52.437Z"}
{"level":"info","message":"Connected to MongoDB..","timestamp":"2022-06-22T17:18:52.500Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T17:31:01.488Z"}
{"level":"info","message":"Connected to MongoDB mongodb://localhost:27017/genres..","timestamp":"2022-06-22T17:31:01.624Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T17:32:12.268Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres","timestamp":"2022-06-22T17:32:12.320Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T17:33:23.502Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres","timestamp":"2022-06-22T17:33:23.550Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T17:34:50.467Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres","timestamp":"2022-06-22T17:34:50.508Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T17:35:28.695Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres","timestamp":"2022-06-22T17:35:28.761Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T17:38:17.738Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres","timestamp":"2022-06-22T17:38:17.793Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T17:43:48.398Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T17:43:48.489Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T17:49:34.262Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T17:49:34.402Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T17:50:48.299Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T17:50:48.354Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T17:52:02.629Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T17:52:02.739Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T17:57:22.890Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T17:57:22.955Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T17:58:06.563Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T17:58:06.621Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:01:13.010Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:01:13.080Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:02:18.602Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:02:18.776Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:04:20.460Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:04:20.534Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:06:16.187Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:06:16.293Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:07:54.226Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:07:54.363Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:09:10.799Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:09:10.933Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:13:26.008Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:13:26.093Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:14:05.179Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:14:05.274Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:16:00.581Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:16:00.663Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:16:12.747Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:16:12.831Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:18:10.256Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:18:10.394Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:22:35.129Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:22:35.188Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:23:54.265Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:23:54.322Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:24:09.145Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:24:09.203Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:24:56.842Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:24:56.896Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:25:27.743Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:25:27.806Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:25:51.426Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:25:51.511Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:26:02.124Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:26:02.214Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:26:31.251Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:26:31.303Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:26:56.595Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:26:56.641Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:27:26.762Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:27:26.808Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:33:27.558Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:33:27.602Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:35:19.222Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:35:19.273Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:37:10.550Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:37:10.624Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:38:21.228Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:38:21.278Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:40:44.909Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:40:44.970Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:49:48.760Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:49:49.030Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:50:42.386Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:50:42.521Z"}
{"message":"Cast to ObjectId failed for value \"2\" (type string) at path \"_id\" for model \"genres\"","stack":"CastError: Cast to ObjectId failed for value \"2\" (type string) at path \"_id\" for model \"genres\"\n    at model.Query.exec (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\query.js:4715:21)\n    at model.Query.Object.<anonymous>.Query.then (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\query.js:4814:15)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","stringValue":"\"2\"","kind":"ObjectId","value":"2","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2022-06-22T18:50:42.786Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T18:51:55.640Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T18:51:55.728Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:05:38.564Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:05:38.673Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:07:04.219Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:07:04.279Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:07:25.493Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:07:25.546Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:07:56.805Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:07:56.851Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:08:41.246Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:08:41.290Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:08:59.687Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:08:59.738Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:12:31.615Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:12:31.669Z"}
{"message":"Cast to ObjectId failed for value \"5\" (type string) at path \"_id\" for model \"genres\"","stack":"CastError: Cast to ObjectId failed for value \"5\" (type string) at path \"_id\" for model \"genres\"\n    at model.Query.exec (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\query.js:4715:21)\n    at model.Query.Object.<anonymous>.Query.then (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\query.js:4814:15)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","stringValue":"\"5\"","kind":"ObjectId","value":"5","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2022-06-22T19:12:31.835Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:12:46.272Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:12:46.331Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:16:21.714Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:16:21.777Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:19:19.301Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:19:19.354Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:19:42.845Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:19:42.914Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:20:01.594Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:20:01.689Z"}
{"message":"Cast to ObjectId failed for value \"5\" (type string) at path \"_id\" for model \"genres\"","stack":"CastError: Cast to ObjectId failed for value \"5\" (type string) at path \"_id\" for model \"genres\"\n    at model.Query.exec (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\query.js:4715:21)\n    at model.Query.Object.<anonymous>.Query.then (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\query.js:4814:15)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","stringValue":"\"5\"","kind":"ObjectId","value":"5","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2022-06-22T19:20:01.975Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:20:28.881Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:20:28.949Z"}
{"message":"Cast to ObjectId failed for value \"5\" (type string) at path \"_id\" for model \"genres\"","stack":"CastError: Cast to ObjectId failed for value \"5\" (type string) at path \"_id\" for model \"genres\"\n    at model.Query.exec (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\query.js:4715:21)\n    at model.Query.Object.<anonymous>.Query.then (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\query.js:4814:15)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","stringValue":"\"5\"","kind":"ObjectId","value":"5","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2022-06-22T19:20:29.183Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:21:02.263Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:21:02.328Z"}
{"message":"mongoose is not defined","stack":"ReferenceError: mongoose is not defined\n    at validObjectId (D:\\Web_apps\\node-practice\\express-demo\\middlewares\\validateObjectId.js:3:5)\n    at newFn (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:360:14)\n    at param (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:371:14)","level":"error","timestamp":"2022-06-22T19:21:02.508Z"}
{"message":"mongoose is not defined","stack":"ReferenceError: mongoose is not defined\n    at validObjectId (D:\\Web_apps\\node-practice\\express-demo\\middlewares\\validateObjectId.js:3:5)\n    at newFn (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:360:14)\n    at param (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:371:14)","level":"error","timestamp":"2022-06-22T19:21:02.583Z"}
{"message":"mongoose is not defined","stack":"ReferenceError: mongoose is not defined\n    at validObjectId (D:\\Web_apps\\node-practice\\express-demo\\middlewares\\validateObjectId.js:3:5)\n    at newFn (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:281:22\n    at param (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:360:14)\n    at param (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:371:14)","level":"error","timestamp":"2022-06-22T19:21:02.643Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:21:39.847Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:21:39.911Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:22:46.922Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:22:46.987Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:23:03.532Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:23:03.586Z"}
{"message":"Cast to ObjectId failed for value \"5\" (type string) at path \"_id\" for model \"genres\"","stack":"CastError: Cast to ObjectId failed for value \"5\" (type string) at path \"_id\" for model \"genres\"\n    at model.Query.exec (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\query.js:4715:21)\n    at model.Query.Object.<anonymous>.Query.then (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\query.js:4814:15)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","stringValue":"\"5\"","kind":"ObjectId","value":"5","path":"_id","reason":{},"valueType":"string","level":"error","timestamp":"2022-06-22T19:23:03.750Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T19:23:16.524Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T19:23:16.597Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:28:14.256Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:28:14.308Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:28:32.887Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:28:32.950Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:32:22.246Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:32:22.293Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:33:15.070Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:33:15.127Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:34:40.261Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:34:40.327Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:36:50.386Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:36:50.438Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:38:47.644Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:38:47.701Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:39:31.944Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:39:31.996Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:42:29.141Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:42:29.203Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:44:52.602Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:44:52.653Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:45:21.569Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:45:21.624Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:45:54.590Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:45:54.647Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:46:09.599Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:46:09.661Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:47:27.033Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:47:27.082Z"}
{"message":"genres validation failed: name: Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","stack":"ValidationError: genres validation failed: name: Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).\n    at model.Object.<anonymous>.Document.invalidate (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\document.js:2970:32)\n    at D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\document.js:2759:17\n    at D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1333:9\n    at processTicksAndRejections (internal/process/task_queues.js:77:11)","errors":{"name":{"name":"ValidatorError","message":"Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","properties":{"message":"Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","type":"maxlength","maxlength":50,"path":"name","value":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"},"kind":"maxlength","path":"name","value":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"}},"_message":"genres validation failed","level":"error","timestamp":"2022-06-22T20:47:27.569Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:47:39.529Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:47:39.586Z"}
{"message":"genres validation failed: name: Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","stack":"ValidationError: genres validation failed: name: Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).\n    at model.Object.<anonymous>.Document.invalidate (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\document.js:2970:32)\n    at D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\document.js:2759:17\n    at D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\schematype.js:1333:9\n    at processTicksAndRejections (internal/process/task_queues.js:77:11)","errors":{"name":{"name":"ValidatorError","message":"Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","properties":{"message":"Path `name` (`aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa`) is longer than the maximum allowed length (50).","type":"maxlength","maxlength":50,"path":"name","value":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"},"kind":"maxlength","path":"name","value":"aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa"}},"_message":"genres validation failed","level":"error","timestamp":"2022-06-22T20:47:39.961Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:47:57.017Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:47:57.085Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:48:16.177Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:48:16.277Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:50:16.459Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:50:16.514Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:51:19.149Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:51:19.207Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:52:44.057Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:52:44.119Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:53:31.263Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:53:31.335Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:55:56.073Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:55:56.147Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:56:29.715Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:56:29.794Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:57:38.041Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:57:38.099Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:59:00.031Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:59:00.093Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T20:59:36.033Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T20:59:36.088Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:11:52.938Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:11:53.269Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:12:33.491Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:12:33.557Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:24:00.362Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:24:00.428Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:24:00.939Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:24:01.169Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:25:46.354Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:25:46.432Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:25:46.797Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:25:47.187Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:26:51.036Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:26:51.133Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:26:51.699Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:26:51.948Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:28:03.606Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:28:03.689Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:28:04.409Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:28:25.707Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:28:25.770Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:28:26.444Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:28:26.626Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:28:40.420Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:28:40.493Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:28:40.573Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:28:40.755Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:29:25.736Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:29:25.823Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:29:25.856Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:29:26.026Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:31:34.505Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:31:34.577Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:31:34.903Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:31:35.022Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:55:23.416Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:55:23.519Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:55:24.456Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:55:24.506Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:56:48.959Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:56:49.036Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:56:49.379Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:56:49.468Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:57:36.914Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:57:36.965Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:57:37.235Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:57:37.303Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:59:17.940Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:59:18.022Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T21:59:18.985Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T21:59:19.065Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:00:52.976Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:00:53.052Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:00:54.125Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:00:54.174Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:06:10.695Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:06:10.778Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:06:11.918Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:06:11.969Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:07:28.600Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:07:28.671Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:07:29.872Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:07:29.922Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:08:59.431Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:08:59.513Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:09:00.189Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:09:00.294Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:14:11.136Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:14:11.212Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:14:11.824Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:14:11.901Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:16:21.327Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:16:21.434Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:16:22.153Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:16:22.211Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:18:17.526Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:18:17.594Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:18:18.335Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:18:18.395Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:18:40.313Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:18:40.417Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:18:41.149Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:18:41.199Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:19:30.702Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:19:30.795Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:19:31.259Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:19:31.356Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:20:55.257Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:20:55.328Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:20:55.840Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:20:55.909Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:23:34.209Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:23:34.287Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:23:34.401Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:23:34.637Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:24:03.132Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:24:03.256Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:24:03.307Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:24:03.551Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:24:46.018Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:24:46.569Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:24:48.870Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:24:48.973Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:24:55.302Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:24:55.387Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-22T22:24:57.457Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-22T22:24:57.588Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:35:38.519Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:35:39.470Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:40:15.498Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:40:15.844Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:40:20.900Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:40:21.028Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:40:55.200Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:40:55.280Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:41:16.802Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:41:17.070Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:46:26.034Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:46:26.189Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:46:47.398Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:46:47.607Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:48:22.444Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:48:22.699Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:48:28.152Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:48:28.269Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:49:14.049Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:49:14.432Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:50:48.779Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:50:49.107Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:51:45.757Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:51:46.062Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:52:15.360Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:52:15.690Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:55:21.706Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:55:21.943Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:55:46.607Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:55:46.719Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:56:47.889Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:56:48.197Z"}
{"message":"customerId is not defined","stack":"ReferenceError: customerId is not defined\n    at returnMovie (D:\\Web_apps\\node-practice\\express-demo\\controllers\\rentalController.js:91:5)\n    at newFn (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:341:12)\n    at next (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:275:10)","level":"error","timestamp":"2022-06-25T19:56:48.516Z"}
{"message":"customerId is not defined","stack":"ReferenceError: customerId is not defined\n    at returnMovie (D:\\Web_apps\\node-practice\\express-demo\\controllers\\rentalController.js:91:5)\n    at newFn (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at next (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\route.js:137:13)\n    at Route.dispatch (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\route.js:112:3)\n    at newFn (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express-async-errors\\index.js:16:20)\n    at Layer.handle [as handle_request] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\layer.js:95:5)\n    at D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:281:22\n    at Function.process_params (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:341:12)\n    at next (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\express\\lib\\router\\index.js:275:10)","level":"error","timestamp":"2022-06-25T19:56:48.683Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:57:39.892Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:57:40.144Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:58:23.718Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:58:24.198Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T19:59:05.304Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T19:59:05.418Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T20:05:06.577Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T20:05:06.852Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T20:05:49.977Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T20:05:50.348Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T20:06:19.506Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T20:06:19.629Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T20:06:52.525Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T20:06:52.781Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:20:57.922Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:21:00.280Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:21:05.407Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:21:05.493Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:22:23.904Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:22:24.231Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:25:11.952Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:25:12.217Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:26:05.021Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:26:05.414Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:26:37.251Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:26:37.576Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:29:45.999Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:29:46.136Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:34:56.627Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:34:56.783Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:39:42.682Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:39:42.825Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:40:43.190Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:40:43.370Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:42:10.316Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:42:10.462Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:42:42.245Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:42:42.362Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:44:56.007Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:44:56.192Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:45:32.785Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:45:32.908Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:46:16.822Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:46:16.970Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:54:51.264Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:54:51.433Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:55:00.321Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:55:00.450Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T21:55:31.561Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T21:55:31.679Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:01:09.485Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:01:10.359Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:04:13.224Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:04:13.547Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:07:18.372Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:07:18.578Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:09:04.777Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:09:04.957Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:12:13.082Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:12:13.224Z"}
{"message":"rentals validation failed: rentalFee: Cast to Number failed for value \"NaN\" (type number) at path \"rentalFee\"","stack":"ValidationError: rentals validation failed: rentalFee: Cast to Number failed for value \"NaN\" (type number) at path \"rentalFee\"\n    at model.Object.<anonymous>.Document.invalidate (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\document.js:2970:32)\n    at model.$set (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\document.js:1445:12)\n    at model.set [as rentalFee] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:181:19)\n    at returnMovie (D:\\Web_apps\\node-practice\\express-demo\\controllers\\rentalController.js:99:5)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","errors":{"rentalFee":{"stringValue":"\"NaN\"","valueType":"number","kind":"Number","value":null,"path":"rentalFee","reason":{"generatedMessage":true,"code":"ERR_ASSERTION","actual":false,"expected":true,"operator":"=="},"name":"CastError","message":"Cast to Number failed for value \"NaN\" (type number) at path \"rentalFee\""}},"_message":"rentals validation failed","level":"error","timestamp":"2022-06-25T22:12:14.459Z"}
{"message":"rentals validation failed: rentalFee: Cast to Number failed for value \"NaN\" (type number) at path \"rentalFee\"","stack":"ValidationError: rentals validation failed: rentalFee: Cast to Number failed for value \"NaN\" (type number) at path \"rentalFee\"\n    at model.Object.<anonymous>.Document.invalidate (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\document.js:2970:32)\n    at model.$set (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\document.js:1445:12)\n    at model.set [as rentalFee] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:181:19)\n    at returnMovie (D:\\Web_apps\\node-practice\\express-demo\\controllers\\rentalController.js:99:5)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","errors":{"rentalFee":{"stringValue":"\"NaN\"","valueType":"number","kind":"Number","value":null,"path":"rentalFee","reason":{"generatedMessage":true,"code":"ERR_ASSERTION","actual":false,"expected":true,"operator":"=="},"name":"CastError","message":"Cast to Number failed for value \"NaN\" (type number) at path \"rentalFee\""}},"_message":"rentals validation failed","level":"error","timestamp":"2022-06-25T22:12:14.634Z"}
{"message":"rentals validation failed: rentalFee: Cast to Number failed for value \"NaN\" (type number) at path \"rentalFee\"","stack":"ValidationError: rentals validation failed: rentalFee: Cast to Number failed for value \"NaN\" (type number) at path \"rentalFee\"\n    at model.Object.<anonymous>.Document.invalidate (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\document.js:2970:32)\n    at model.$set (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\document.js:1445:12)\n    at model.set [as rentalFee] (D:\\Web_apps\\node-practice\\express-demo\\node_modules\\mongoose\\lib\\helpers\\document\\compile.js:181:19)\n    at returnMovie (D:\\Web_apps\\node-practice\\express-demo\\controllers\\rentalController.js:99:5)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","errors":{"rentalFee":{"stringValue":"\"NaN\"","valueType":"number","kind":"Number","value":null,"path":"rentalFee","reason":{"generatedMessage":true,"code":"ERR_ASSERTION","actual":false,"expected":true,"operator":"=="},"name":"CastError","message":"Cast to Number failed for value \"NaN\" (type number) at path \"rentalFee\""}},"_message":"rentals validation failed","level":"error","timestamp":"2022-06-25T22:12:14.876Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:17:28.802Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:17:29.051Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:22:42.646Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:22:44.682Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:27:45.820Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:27:46.422Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:29:20.606Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:29:21.100Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:31:02.749Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:31:03.437Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:32:36.049Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:32:36.147Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:33:44.352Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:33:44.845Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:35:34.339Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:35:34.759Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:38:00.195Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:38:00.890Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:38:53.734Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:38:54.411Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:39:27.802Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:39:28.411Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:41:22.921Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:41:23.686Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:45:57.698Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:45:58.210Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-25T22:52:02.270Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-25T22:52:02.917Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T13:06:53.095Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-26T13:06:56.080Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T13:07:06.792Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-26T13:07:06.946Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T13:07:17.641Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-26T13:07:17.766Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T13:16:09.862Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-26T13:16:10.104Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T13:16:34.498Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-26T13:16:34.578Z"}
{"message":"moment is not defined","stack":"ReferenceError: moment is not defined\n    at model.moment (D:\\Web_apps\\node-practice\\express-demo\\Models\\rental.js:37:22)\n    at returnMovie (D:\\Web_apps\\node-practice\\express-demo\\controllers\\rentalController.js:105:5)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","level":"error","timestamp":"2022-06-26T13:16:35.510Z"}
{"message":"moment is not defined","stack":"ReferenceError: moment is not defined\n    at model.moment (D:\\Web_apps\\node-practice\\express-demo\\Models\\rental.js:37:22)\n    at returnMovie (D:\\Web_apps\\node-practice\\express-demo\\controllers\\rentalController.js:105:5)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","level":"error","timestamp":"2022-06-26T13:16:35.812Z"}
{"message":"moment is not defined","stack":"ReferenceError: moment is not defined\n    at model.moment (D:\\Web_apps\\node-practice\\express-demo\\Models\\rental.js:37:22)\n    at returnMovie (D:\\Web_apps\\node-practice\\express-demo\\controllers\\rentalController.js:105:5)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","level":"error","timestamp":"2022-06-26T13:16:35.972Z"}
{"message":"moment is not defined","stack":"ReferenceError: moment is not defined\n    at model.moment (D:\\Web_apps\\node-practice\\express-demo\\Models\\rental.js:37:22)\n    at returnMovie (D:\\Web_apps\\node-practice\\express-demo\\controllers\\rentalController.js:105:5)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","level":"error","timestamp":"2022-06-26T13:16:36.164Z"}
{"message":"moment is not defined","stack":"ReferenceError: moment is not defined\n    at model.moment (D:\\Web_apps\\node-practice\\express-demo\\Models\\rental.js:37:22)\n    at returnMovie (D:\\Web_apps\\node-practice\\express-demo\\controllers\\rentalController.js:105:5)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","level":"error","timestamp":"2022-06-26T13:16:36.334Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T13:17:14.908Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-26T13:17:14.987Z"}
{"message":"moment is not defined","stack":"ReferenceError: moment is not defined\n    at model.moment (D:\\Web_apps\\node-practice\\express-demo\\Models\\rental.js:37:22)\n    at returnMovie (D:\\Web_apps\\node-practice\\express-demo\\controllers\\rentalController.js:105:5)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","level":"error","timestamp":"2022-06-26T13:17:15.915Z"}
{"message":"moment is not defined","stack":"ReferenceError: moment is not defined\n    at model.moment (D:\\Web_apps\\node-practice\\express-demo\\Models\\rental.js:37:22)\n    at returnMovie (D:\\Web_apps\\node-practice\\express-demo\\controllers\\rentalController.js:105:5)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","level":"error","timestamp":"2022-06-26T13:17:16.086Z"}
{"message":"moment is not defined","stack":"ReferenceError: moment is not defined\n    at model.moment (D:\\Web_apps\\node-practice\\express-demo\\Models\\rental.js:37:22)\n    at returnMovie (D:\\Web_apps\\node-practice\\express-demo\\controllers\\rentalController.js:105:5)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","level":"error","timestamp":"2022-06-26T13:17:16.270Z"}
{"message":"moment is not defined","stack":"ReferenceError: moment is not defined\n    at model.moment (D:\\Web_apps\\node-practice\\express-demo\\Models\\rental.js:37:22)\n    at returnMovie (D:\\Web_apps\\node-practice\\express-demo\\controllers\\rentalController.js:105:5)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","level":"error","timestamp":"2022-06-26T13:17:16.555Z"}
{"message":"moment is not defined","stack":"ReferenceError: moment is not defined\n    at model.moment (D:\\Web_apps\\node-practice\\express-demo\\Models\\rental.js:37:22)\n    at returnMovie (D:\\Web_apps\\node-practice\\express-demo\\controllers\\rentalController.js:105:5)\n    at runMicrotasks (<anonymous>)\n    at processTicksAndRejections (internal/process/task_queues.js:95:5)","level":"error","timestamp":"2022-06-26T13:17:16.718Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T13:17:58.050Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-26T13:17:58.138Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T13:18:17.280Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-26T13:18:17.361Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T13:18:28.059Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-26T13:18:28.142Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T13:18:35.061Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-26T13:18:35.216Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T13:18:45.762Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-26T13:18:46.149Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T13:19:45.786Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-26T13:19:45.897Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T13:20:07.792Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-26T13:20:07.939Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T13:21:55.853Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-26T13:21:55.960Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T13:29:25.914Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres","timestamp":"2022-06-26T13:29:25.957Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T13:30:50.387Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres","timestamp":"2022-06-26T13:30:50.526Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T17:02:51.747Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres","timestamp":"2022-06-26T17:02:51.870Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T17:21:34.713Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres","timestamp":"2022-06-26T17:21:34.818Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T19:34:56.981Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres_test","timestamp":"2022-06-26T19:34:57.079Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T19:35:51.143Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres","timestamp":"2022-06-26T19:35:51.190Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T19:36:27.159Z"}
{"level":"warn","message":"Could not connect to MongoDB... bad auth : Authentication failed.","timestamp":"2022-06-26T19:36:29.155Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T19:38:17.722Z"}
{"level":"info","message":"Connected to mongodb+srv://adminuser:1234admin@cluster0.vvnhcpc.mongodb.net/?retryWrites=true&w=majority","timestamp":"2022-06-26T19:38:19.488Z"}
{"level":"info","message":"Server running on port 3000","timestamp":"2022-06-26T19:39:37.958Z"}
{"level":"info","message":"Connected to mongodb://localhost:27017/genres","timestamp":"2022-06-26T19:39:38.049Z"}
